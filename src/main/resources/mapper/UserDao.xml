<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bear.springmvctest.dao.UserDao">
    <!-- 目的：为dao接口方法提供sql语句配置 -->

    <resultMap id="BaseResultMap" type="com.bear.springmvctest.entityYcgj.User">
        <!--@Table yc_user-->
        <id property="id" column="id"></id>
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="account" column="account" jdbcType="VARCHAR"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="bank" column="bank" jdbcType="VARCHAR"/>
        <result property="cardNo" column="card_no" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="realname" column="realname" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="createId" column="create_id" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="INTEGER"/>
        <result property="updateId" column="update_id" jdbcType="INTEGER"/>
        <result property="updateTime" column="update_time" jdbcType="INTEGER"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>

<!--        <association property="role" javaType="com.bear.springmvctest.entityYcgj.Role">-->
<!--            <result column="name" property="name"></result>-->
<!--        </association>-->
<!--        <result property="role.name" column="name"></result>-->

    </resultMap>
    
    <resultMap id="getUserDistrictResultMap" type="com.bear.springmvctest.entityYcgj.User" extends="BaseResultMap">
        <collection property="userDistrictList" ofType="com.bear.springmvctest.entityYcgj.UserDistrict">
            <id property="id" column="role_id"></id>
            <result property="name" column="name"></result>
            <result property="paths" column="paths"></result>
            <result property="pathsName" column="paths_name"></result>
        </collection>
    </resultMap>

    <select id="getUserDistrict" resultMap="getUserDistrictResultMap">
        select
        a.*,b.name,b.id role_id,b.paths,b.paths_name
        from
        yc_user a
        left join yc_user_district b on a.id = b.user_id
        where a.id = #{id}
    </select>


    <select id="getUserDetail" resultMap="BaseResultMap">
        select
        a.*,c.name
        from
        yc_user a
        left join yc_user_role b on a.id = b.user_id
        left join yc_role c on b.role_id = c.id
        where a.id = #{id}
    </select>


<!--    别名自动映射-->
<!--    <select id="getUserDetail" resultType="User">-->
<!--        select-->
<!--        a.*,c.name "role.name"-->
<!--        from-->
<!--        yc_user a-->
<!--        left join yc_user_role b on a.id = b.user_id-->
<!--        left join yc_role c on b.role_id = c.id-->
<!--        where a.id = #{id}-->
<!--    </select>-->

    <select id="getOne" resultType="User" parameterType="User">
        <!-- 具体的sql -->
        SELECT
        *
        FROM
        yc_user
        <where>
            <if test="username != null">
                AND username = #{username}
            </if>
            <if test="account != null">
                AND account = #{account}
            </if>
            AND is_delete = 0
            LIMIT 1
        </where>
    </select>

    <select id="getLoginResult" resultType="com.bear.springmvctest.dto.LoginResult" parameterType="String">
        <!-- 具体的sql -->
        SELECT
        id, account, username, phone
        FROM
        yc_user
        WHERE
        username = #{username}
        AND is_delete = 0 limit 1;
    </select>

    <select id="queryById" resultType="User" parameterType="Integer">
        <!-- 具体的sql -->
        SELECT
        *
        FROM
        yc_user
        WHERE
        id = #{id}
    </select>

    <select id="queryAll" resultType="User">
		SELECT
			*
		FROM
			yc_user
		ORDER BY
			id
		LIMIT #{offset}, #{limit}
	</select>

    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into yc_user(username, password)
        values (#{username}, #{password})
    </insert>

    <insert id="batchInsert">
        insert into yc_user(username, password)
        values
        <foreach collection="list" item="user" separator=",">
            ( #{user.username}, #{user.password})
        </foreach>
    </insert>


</mapper>
