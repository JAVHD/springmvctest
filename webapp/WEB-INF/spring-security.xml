<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Security依赖一系列Servlet过滤器来提供不同的安全特性。但是，你几乎不需要知道这些细节，因为你不需要显式声明springSecurityFilterChain以及它所链接在一起的其他过滤器。当配置<http>元素时，Spring Security将会为我们自动创建这些Bean，接下来我们将会介绍这部分内容。&ndash;&gt;-->
    <!--    当配置<http>元素时，Spring Security将会为我们自动创建这些Bean-->
    <!--    <http auto-config="true" use-expressions="true">-->
    <!--        <intercept-url pattern="/login" access="permitAll()"/>-->
    <!--        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>-->
    <!--        <form-login login-page="/login" default-target-url="/admin/index"-->
    <!--                    authentication-failure-url="/login?error=true"/>-->
    <!--        <csrf disabled="true"></csrf>-->
    <!--    </http>-->

    <!--    <authentication-manager>-->
    <!--        &lt;!&ndash; 可提供登陆访问的用户 &ndash;&gt;-->
    <!--        <authentication-provider>-->
    <!--            <user-service>-->
    <!--                <user name="admin" password="123456" authorities="ROLE_ADMIN"/>-->
    <!--                <user name="bear" password="123456" authorities="ROLE_ADMIN"/>-->
    <!--            </user-service>-->
    <!--        </authentication-provider>-->
    <!--    </authentication-manager>-->


    <http pattern="/api/**" entry-point-ref="restAuthenticationEntryPoint" create-session="stateless">
        <intercept-url pattern="/api/**" access="hasRole('ROLE_ADMIN')"/>
        <csrf disabled="true"/>
        <custom-filter before="FORM_LOGIN_FILTER" ref="jwtAuthenticationFilter"/>
    </http>

    <beans:bean id="jwtAuthenticationFilter" class="com.bear.springmvctest.security.JwtAuthenticationFilter">
        <beans:constructor-arg type="java.lang.String">
            <beans:value>/api/**</beans:value>
        </beans:constructor-arg>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationSuccessHandler" ref="jwtAuthenticationSuccessHandler"/>
    </beans:bean>

    <beans:bean id="restAuthenticationEntryPoint" class="com.bear.springmvctest.security.RestAuthenticationEntryPoint"/>
    <beans:bean id="jwtAuthenticationSuccessHandler"
                class="com.bear.springmvctest.security.JwtAuthenticationSuccessHandler"/>
    <beans:bean id="jwtAuthenticationProvider" class="com.bear.springmvctest.security.JwtAuthenticationProvider"/>

    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="jwtAuthenticationProvider"/>
    </authentication-manager>

</beans:beans>