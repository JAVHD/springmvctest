<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvcx="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd ">

    <task:annotation-driven scheduler="myScheduler"/>
    <task:scheduler id="myScheduler" pool-size="5"/>


    <!--此文件负责整个mvc中的配置-->

    <!--    &lt;!&ndash;启用spring的一些annotation &ndash;&gt;-->
    <!--    有了<context:component-scan>，另一个<context:annotation-config/>标签根本可以移除掉，因为已经被包含进去了-->
    <!--    <context:annotation-config/>-->

    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <mvcx:annotation-driven/>

    <!--静态资源映射-->
    <!--本项目把静态资源放在了webapp的statics目录下，资源映射如下-->
    <mvcx:resources mapping="/css/**" location="/WEB-INF/static/css/"/>
    <mvcx:resources mapping="/js/**" location="/WEB-INF/static/js/"/>
    <mvcx:resources mapping="/image/**" location="/WEB-INF/static/image/"/>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀(如果最后一个还是表示文件夹,则最后的斜杠不要漏了) 使用JSP-->
    <!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/view/"/><!--设置JSP文件的目录位置-->
        <property name="suffix" value=".jsp"/>
        <property name="exposeContextBeansAsAttributes" value="true"/>
    </bean>

    <bean id="personInfo" class="com.bear.springmvctest.component.PersonInfo"></bean>

    <bean id="order" class="com.bear.springmvctest.entity.Order">
        <property name="orderSn" value="20200528001"></property>
    </bean>
    <bean id="autoWiredPropertyController" class="com.bear.springmvctest.controller.AutoWiredPropertyController"
          autowire="byType">
    </bean>
    <bean id="school" class="com.bear.springmvctest.component.School" autowire="byType"></bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="#{5*1024*1024}"/> <!--   SpEl spring表达   -->
    </bean>

    <!-- 自动扫描装配 -->
    <context:component-scan base-package="com.bear.springmvctest.controller">
        <!-- 扫描时跳过 @Controller 注解的JAVA类（控制器） -->
        <!--        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    </context:component-scan>

    <context:component-scan base-package="com.bear.springmvctest.service.impl"/>
    <context:component-scan base-package="com.bear.springmvctest.component"/>
    <context:component-scan base-package="com.bear.springmvctest.entity"/>

    <context:mbean-export/>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath:application.properties"/>

</beans>